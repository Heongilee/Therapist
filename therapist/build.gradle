plugins {
	id 'org.springframework.boot' version '2.5.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'com.projectTeam'
version = '0.0.7-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

dependencies {
	implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5'								// ignoring SSL cert (https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient)
	implementation 'org.springframework.boot:spring-boot-starter-websocket'			        							// websocket library
	implementation group: 'org.thymeleaf.extras', name: 'thymeleaf-extras-springsecurity5', version: '3.0.4.RELEASE'	// 로그인 / 로그아웃에 따른 분기 처리를 해주기 위한 라이브러리.
	implementation 'org.springframework.boot:spring-boot-starter-security'												// Spring Security를 위한 라이브러리 (1)
	implementation 'org.springframework.security:spring-security-test'													// Spring Security를 위한 라이브러리 (2)
	compileOnly 'org.projectlombok:lombok:1.18.8'
	annotationProcessor 'org.projectlombok:lombok:1.18.8'									                        	// 롬복(lombok)을 이용해서 getter-setter 생성을 @Data 어노테이션을 통해서 만들어줌.
	implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'                           // REST API를 만드는데 필요한 JSON 객체 생성에 도움을 주는 라이브러리
	implementation 'org.springframework.boot:spring-boot-starter-validation'                                            // DTO 객체로 들어오는 데이터에 대해 무결성을 보장해주는 라이브러리
	implementation group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '2.7.3'								// mariadb-java-client는 spring boot에서 관리하는 프로젝트가 아니기 때문에, 버전을 명시한다.
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'								// mariaDB를 운용하기 위한 spring data jpa 라이브러리
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'												// html에 정보를 뿌리기 위한 용도의 Thymeleaf 템플릿 엔진
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2',
			// Uncomment the next line if you want to use RSASSA-PSS (PS256, PS384, PS512) algorithms:
			//'org.bouncycastle:bcprov-jdk15on:1.60',
			'io.jsonwebtoken:jjwt-jackson:0.11.2' // or 'io.jsonwebtoken:jjwt-gson:0.11.2' for gson
	testImplementation("org.junit.vintage:junit-vintage-engine") {
		exclude group: "org.hamcrest", module: "hamcrest-core"
	}
}


test {
	useJUnitPlatform()
}

jar {
	enabled = false
}
